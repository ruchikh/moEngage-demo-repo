{"ast":null,"code":"var _s = $RefreshSig$();\n/* eslint-disable import/no-extraneous-dependencies */\nimport { useEffect, useState } from \"react\";\nimport { Capacitor } from \"@capacitor/core\";\nimport { PushNotifications } from \"@capacitor/push-notifications\";\nimport { MoECapacitorCore } from \"capacitor-moengage-core\";\n// import NotificationModule from \"services/pushNotification\";\n\nimport { EventPathMapping } from \"./eventPathMapping\";\nconst useNotifications = ({\n  velynk_id: velynkId,\n  customerId\n}) => {\n  _s();\n  const [fcmToken, setFcmToken] = useState({});\n  const addListeners = async () => {\n    await PushNotifications.addListener(\"registration\", async token => {\n      setFcmToken(token);\n      console.info(\"Registration token: \", token.value);\n    });\n    await PushNotifications.addListener(\"registrationError\", err => {\n      console.error(\"Registration error: \", err.error);\n    });\n    await PushNotifications.addListener(\"pushNotificationReceived\", notification => {\n      console.log(\"Push notification received: \", notification);\n    });\n    await PushNotifications.addListener(\"pushNotificationActionPerformed\", ({\n      notification\n    }) => {\n      window.open(EventPathMapping(notification.data.event, notification.data));\n    });\n  };\n  const sendFCMToken = async () => {\n    await NotificationModule.sendFCMToken({\n      velynkId,\n      customerId,\n      token: fcmToken.value\n    }).catch(err => console.log(err));\n  };\n  useEffect(() => {\n    if (Capacitor.isNativePlatform()) {\n      // if (velynkId && fcmToken?.value) {\n      //   sendFCMToken();\n      // }\n\n      const permStatus = PushNotifications.checkPermissions();\n      MoECapacitorCore.pushPermissionResponseAndroid({\n        isGranted: permStatus.receive === \"granted\"\n      });\n      if (permStatus.receive === \"granted\") {\n        MoECapacitorCore.passFcmPushToken({\n          token: fcmToken === null || fcmToken === void 0 ? void 0 : fcmToken.value,\n          appId: \"Q5YBYJOT6NU535WZD1JVOIDV\"\n        });\n        MoECapacitorCore.setupNotificationChannelsAndroid();\n        MoECapacitorCore.requestPushPermissionAndroid();\n      } else {\n        MoECapacitorCore.navigateToSettingsAndroid();\n      }\n    }\n  }, [velynkId, fcmToken === null || fcmToken === void 0 ? void 0 : fcmToken.value]);\n  const registerNotifications = async () => {\n    let permStatus = await PushNotifications.checkPermissions();\n    if (permStatus.receive === \"prompt\") {\n      permStatus = await PushNotifications.requestPermissions();\n    }\n    if (permStatus.receive !== \"granted\") {\n      throw new Error(\"User denied permissions!\");\n    }\n    await PushNotifications.register();\n  };\n  const getDeliveredNotifications = async () => {\n    const notificationList = await PushNotifications.getDeliveredNotifications();\n    console.log(\"delivered notifications\", notificationList);\n  };\n  const enablePushNotifications = () => {\n    if (Capacitor.isNativePlatform()) {\n      addListeners();\n      registerNotifications();\n      getDeliveredNotifications();\n    }\n  };\n  return enablePushNotifications;\n};\n_s(useNotifications, \"Up+EEYpJIsyWBIdoQ2tBCz2hTfQ=\");\nexport default useNotifications;","map":{"version":3,"names":["useEffect","useState","Capacitor","PushNotifications","MoECapacitorCore","EventPathMapping","useNotifications","velynk_id","velynkId","customerId","_s","fcmToken","setFcmToken","addListeners","addListener","token","console","info","value","err","error","notification","log","window","open","data","event","sendFCMToken","NotificationModule","catch","isNativePlatform","permStatus","checkPermissions","pushPermissionResponseAndroid","isGranted","receive","passFcmPushToken","appId","setupNotificationChannelsAndroid","requestPushPermissionAndroid","navigateToSettingsAndroid","registerNotifications","requestPermissions","Error","register","getDeliveredNotifications","notificationList","enablePushNotifications"],"sources":["/Users/ruchi/Documents/work/vegrow-repo/moengage-demo-app/src/hooks/useNotifications.js"],"sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport { useEffect, useState } from \"react\";\nimport { Capacitor } from \"@capacitor/core\";\nimport { PushNotifications } from \"@capacitor/push-notifications\";\nimport { MoECapacitorCore } from \"capacitor-moengage-core\";\n// import NotificationModule from \"services/pushNotification\";\n\nimport { EventPathMapping } from \"./eventPathMapping\";\n\nconst useNotifications = ({ velynk_id: velynkId, customerId }) => {\n  const [fcmToken, setFcmToken] = useState({});\n  const addListeners = async () => {\n    await PushNotifications.addListener(\"registration\", async (token) => {\n      setFcmToken(token);\n      console.info(\"Registration token: \", token.value);\n    });\n\n    await PushNotifications.addListener(\"registrationError\", (err) => {\n      console.error(\"Registration error: \", err.error);\n    });\n\n    await PushNotifications.addListener(\n      \"pushNotificationReceived\",\n      (notification) => {\n        console.log(\"Push notification received: \", notification);\n      }\n    );\n\n    await PushNotifications.addListener(\n      \"pushNotificationActionPerformed\",\n      ({ notification }) => {\n        window.open(\n          EventPathMapping(notification.data.event, notification.data)\n        );\n      }\n    );\n  };\n\n  const sendFCMToken = async () => {\n    await NotificationModule.sendFCMToken({\n      velynkId,\n      customerId,\n      token: fcmToken.value,\n    }).catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    if (Capacitor.isNativePlatform()) {\n      // if (velynkId && fcmToken?.value) {\n      //   sendFCMToken();\n      // }\n\n      const permStatus = PushNotifications.checkPermissions();\n\n      MoECapacitorCore.pushPermissionResponseAndroid({\n        isGranted: permStatus.receive === \"granted\",\n      });\n      if (permStatus.receive === \"granted\") {\n        MoECapacitorCore.passFcmPushToken({\n          token: fcmToken?.value,\n          appId: \"Q5YBYJOT6NU535WZD1JVOIDV\",\n        });\n        MoECapacitorCore.setupNotificationChannelsAndroid();\n        MoECapacitorCore.requestPushPermissionAndroid();\n      } else {\n        MoECapacitorCore.navigateToSettingsAndroid();\n      }\n    }\n  }, [velynkId, fcmToken?.value]);\n\n  const registerNotifications = async () => {\n    let permStatus = await PushNotifications.checkPermissions();\n\n    if (permStatus.receive === \"prompt\") {\n      permStatus = await PushNotifications.requestPermissions();\n    }\n\n    if (permStatus.receive !== \"granted\") {\n      throw new Error(\"User denied permissions!\");\n    }\n\n    await PushNotifications.register();\n  };\n\n  const getDeliveredNotifications = async () => {\n    const notificationList =\n      await PushNotifications.getDeliveredNotifications();\n    console.log(\"delivered notifications\", notificationList);\n  };\n\n  const enablePushNotifications = () => {\n    if (Capacitor.isNativePlatform()) {\n      addListeners();\n      registerNotifications();\n      getDeliveredNotifications();\n    }\n  };\n\n  return enablePushNotifications;\n};\n\nexport default useNotifications;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}